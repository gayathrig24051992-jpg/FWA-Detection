# -*- coding: utf-8 -*-
"""fwa_app.py.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VDFKJ8RKdaTXhsMq20XkjxqZo---slHE
"""

import streamlit as st
import boto3
import uuid
from PyPDF2 import PdfReader

# --- Configuration ---
AWS_REGION = 'ap-south-1'
AGENT_ID = '5GILSDVVQO'  # Replace with your actual Agent ID
sessionId='test-session-001'
AGENT_ALIAS_ID = 'TSTALIASID'  # Replace with the alias for deployed version


# --- Functions ---
def extract_text_from_pdf(file):
    text = ""
    try:
        reader = PdfReader(file)
        for page in reader.pages:
            page_text = page.extract_text()
            if page_text:
                text += page_text + "\n"
    except Exception as e:
        st.error(f"Error reading PDF: {e}")
    return text.strip()

def query_bedrock_agent(text):
    try:
        client = boto3.client('bedrock-agent-runtime', region_name=AWS_REGION)
        session_id = str(uuid.uuid4())
        response = client.invoke_agent(
            agentId=AGENT_ID,
            agentAliasId=AGENT_ALIAS_ID,
            sessionId=session_id,
            inputText="Please analyze the following medical claim for potential Fraud, Waste, and Abuse:\n\n" + text
        )

        # Parse response stream
        completion = ""
        for event in response.get('completion', []):
            chunk = event.get('chunk')
            if chunk and 'bytes' in chunk:
                completion += chunk['bytes'].decode('utf-8')

        return completion
    except Exception as e:
        st.error(f"Error invoking Bedrock agent: {e}")
        return None

# --- Streamlit UI ---
st.set_page_config(page_title="FWA Detector", layout="centered")
st.title("ðŸ§  Fraud, Waste & Abuse Detection")
st.write("Upload a medical claims PDF and let the Bedrock agent evaluate it.")

uploaded_file = st.file_uploader("Choose a PDF file", type="pdf")

if uploaded_file:
    with st.spinner("Extracting text from PDF..."):
        extracted_text = extract_text_from_pdf(uploaded_file)

    if extracted_text:
        st.success("âœ… PDF text successfully extracted.")
        if st.button("Analyze with Bedrock Agent"):
            with st.spinner("Invoking agent..."):
                agent_response = query_bedrock_agent(extracted_text)
            if agent_response:
                st.subheader("ðŸ§  Agent Response")
                st.text_area("Response", agent_response, height=300)
            else:
                st.warning("No response received from the agent.")
    else:
        st.error("No extractable text found in the uploaded PDF.")